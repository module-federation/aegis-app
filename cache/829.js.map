{"version":3,"sources":["webpack://aegis-app/./src/adapters/datasources/datasource-adapter-customer.js","webpack://aegis-app/./src/adapters/datasources/datasource-mongodb.js","webpack://aegis-app/./src/config/customer.js","webpack://aegis-app/./src/config/index.js","webpack://aegis-app/./src/config/inventory.js","webpack://aegis-app/./src/config/order.js","webpack://aegis-app/./src/config/webswitch.js","webpack://aegis-app/./src/domain/bind-adapters.js","webpack://aegis-app/./src/domain/index.js","webpack://aegis-app/./src/domain/inventory.js","webpack://aegis-app/./src/domain/webswitch.js"],"names":["DataSourceAdapterCustomer","url","cacheSize","DataSourceFile","DataSourceCustomer","id","data","getSecret","process","env","MONGODB_CREDS","user","pass","token","archive","console","debug","DataSourceAdapterMongoDb","DataSourceMongoDb","DataSourceMongoDbArchive","datasource","factory","name","creds","Customer","modelName","endpoint","dependencies","uuid","nanoid","makeCustomerFactory","validate","validateModel","onDelete","okToDelete","mixins","freezeProperties","requireProperties","validateProperties","propKey","regex","relations","orders","type","foreignKey","commands","decrypt","command","acl","runFibonacci","model","start","Date","now","fibonacci","x","param","parseFloat","result","Number","isNaN","time","ports","runFibonacciCust","service","timeout","doesFieldExist","accessControlList","customer","allow","desc","Inventory","makeInventoryFactory","maxnum","values","categories","assetTypes","isValid","_obj","prop","every","p","properties","Order","makeOrderFactory","domain","requiredForGuest","requiredForApproval","requiredForCompletion","freezeOnApproval","freezeOnCompletion","updateProperties","update","recalcTotal","updateSignature","Object","OrderStatus","statusChangeValid","orderTotalValid","readyToDelete","eventHandlers","handleOrderEvent","listen","notify","validateAddress","keys","producesEvent","disabled","authorizePayment","consumesEvent","undo","cancelPayment","pickOrder","callback","orderPicked","returnInventory","circuitBreaker","portTimeout_pickOrder_order","callVolume","errorRate","intervalMs","shipOrder","orderShipped","returnShipment","portTimeout_shipOrder_order","portRetryFailed_order","fallbackFn","cancel","trackShipment","verifyDelivery","returnDelivery","completePayment","paymentCompleted","refundPayment","cancelShipment","cancelOrders","methods","approveOrders","trackAsyncContext","customHttpStatus","testContainsMany","runFibonacciJs","getFieldList","createModelEvent","inventory","arrayKey","routes","path","get","req","res","listModels","writable","query","post","createModel","body","status","json","message","ctx","context","OrderError","findModel","params","patch","editModel","changes","removeModel","approve","serializers","on","key","value","enabled","WebSwitch","makeClient","internal","serviceLocatorInit","serviceLocatorAsk","serviceLocatorAnswer","websocketConnect","websocketPing","websocketSend","websocketClose","websocketStatus","websocketTerminate","websocketOnClose","websocketOnOpen","websocketOnMessage","websocketOnError","websocketOnPong","makeAdapters","adapters","services","map","port","e","warn","reduce","c","validateSpec","spec","missing","filter","length","Error","entries","makeModel","concat","GlobalMixins","bindAdapters","models","modelSpecs","k","v","category","price","discount","sku","purchaseOrder","vendor","inStock","assetType","quantity","freeze","HOSTNAME","SERVICENAME","HBEATTIMEOUT","WSOCKETERROR","isPrimary","test","SWITCH","isBackup","BACKUP","DEBUG","heartbeatMs","sslEnabled","SSL_ENABLED","clearPort","PORT","cipherPort","SSL_PORT","activePort","activeProto","activeHost","DOMAIN","os","proto","SWITCH_PROTO","SWITCH_PORT","host","SWITCH_HOST","override","SWITCH_OVERRIDE","apiProto","apiUrl","serviceUrl","ServiceMeshClient","mesh","pong","heartbeatTimer","headers","pid","eventName","hostname","role","telemetry","memoryUsage","cpuUsage","performance","nodeTiming","listServices","events","listEvents","socketState","primary","backup","options","binary","resolveUrl","agent","protocol","useBinary","log","send","heartbeat","setTimeout","sendQueuedMsgs","missingEventName","emit","listeners","forEach","listener","error","fn","connect","code","reason","msg","toString","clearTimeout","once","sent","enqueue","queueDepth","dequeue","save","removeAllListeners","EventEmitter","client","sendQueue","sendQueueMax","push","shift","getClient","publish","event","subscribe","handler","close"],"mappings":"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","file":"829.js","sourcesContent":["export const DataSourceAdapterCustomer = function (\n  url,\n  cacheSize,\n  DataSourceFile\n) {\n  /**\n   * Datasource adapter for AWS Dynamo DB\n   */\n  class DataSourceCustomer extends DataSourceFile {\n    save (id, data) {\n      super.save(id, data)\n    }\n  }\n\n  return DataSourceCustomer\n}\n","'use strict'\n\nfunction getSecret () {\n  return process.env.MONGODB_CREDS || { user: null, pass: null, token: null }\n}\n\nfunction archive (id) {\n  console.debug('mock archive', id)\n}\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbArchive extends DataSourceMongoDb {\n    constructor (datasource, factory, name) {\n      super(datasource, factory, name)\n      this.url = url\n      this.cacheSize = cacheSize\n      this.creds = getSecret()\n    }\n\n    /**\n     * @override\n     */\n    delete (id) {\n      console.debug('archive', id)\n      archive(id)\n    }\n  }\n\n  return DataSourceMongoDbArchive\n}\n","'use strict'\n\nimport {\n  validateModel,\n  freezeProperties,\n  validateProperties,\n  requireProperties\n} from '../domain/mixins'\nimport { makeCustomerFactory, okToDelete } from '../domain/customer'\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport { nanoid } from 'nanoid'\nimport { DataSourceAdapterCustomer } from '../adapters/datasources/datasource-adapter-customer'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Customer = {\n  modelName: 'customer',\n  endpoint: 'customers',\n  dependencies: { uuid: () => nanoid(8) },\n  factory: makeCustomerFactory,\n  validate: validateModel,\n  onDelete: okToDelete,\n  // datasource: {\n  //   factory: DataSourceAdapterCustomer,\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceFile'\n  // },\n  mixins: [\n    freezeProperties('customerId'),\n    requireProperties(\n      'firstName',\n      'lastName',\n      'email',\n      'shippingAddress',\n      'billingAddress',\n      'creditCardNumber'\n    ),\n    validateProperties([\n      {\n        propKey: 'email',\n        // unique: { encrypted: true },\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      }\n    ])\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'customerId'\n    }\n  },\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    },\n    runFibonacci: {\n      command: model => {\n        const start = Date.now()\n        function fibonacci (x) {\n          if (x === 0) {\n            return 0\n          }\n          if (x === 1) {\n            return 1\n          }\n          return fibonacci(x - 1) + fibonacci(x - 2)\n        }\n        const param = parseFloat(model.fibonacci)\n        return {\n          result: fibonacci(Number.isNaN(param) ? 10 : param),\n          time: Date.now() - start\n        }\n      },\n      acl: ['read', 'write']\n    }\n  },\n  ports: {\n    runFibonacciCust: {\n      service: 'customer',\n      type: 'inbound',\n      timeout: 0\n    },\n    doesFieldExist: {\n      service: 'customer',\n      type: 'inbound',\n      timeout: 0\n    }\n  },\n  accessControlList: {\n    customer: {\n      allow: 'read',\n      type: 'relation',\n      desc: 'Allow orders to see customers.'\n    }\n  }\n}\n","export * from './webswitch' // always export this\nexport * from './order'\nexport * from './customer'\nexport * from './inventory'\n\n// export * from './user'\n// export * from './query-engine'\n// export * from './dam-api'\n// export * from './ticket-master'\n// export * from './access-controller'\n","'use strict'\n\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport {\n  makeInventoryFactory,\n  assetTypes,\n  properties,\n  categories\n} from '../domain/inventory'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  validateProperties\n} from '../domain/mixins'\n\n/**\n * @type {import(\"../domain/order\").ModelSpecification}\n */\nexport const Inventory = {\n  modelName: 'inventory',\n  endpoint: 'inventory',\n  dependencies: {},\n  factory: makeInventoryFactory,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://127.0.0.1:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  mixins: [\n    requireProperties('name', 'inStock', 'category', 'price', 'purchaseOrder'),\n    validateProperties([\n      {\n        propKey: 'inStock',\n        typeof: 'number',\n        maxnum: 99999\n      },\n      {\n        propKey: 'category',\n        values: categories\n      },\n      {\n        propKey: 'assetType',\n        values: assetTypes\n      },\n      {\n        propKey: 'properties',\n        isValid: (_obj, prop) => prop.every(p => properties.includes(p))\n      },\n      {\n        propKey: 'price',\n        typeof: 'number',\n        maxnum: 999.99\n      }\n    ]),\n    freezeProperties('*')\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'itemId',\n      desc: 'many items per order'\n    }\n  }\n}\n","'use strict'\n\nimport {\n  makeOrderFactory,\n  readyToDelete,\n  handleOrderEvent,\n  orderShipped,\n  paymentCompleted,\n  OrderStatus,\n  recalcTotal,\n  requiredForCompletion,\n  statusChangeValid,\n  freezeOnApproval,\n  freezeOnCompletion,\n  orderTotalValid,\n  returnInventory,\n  returnShipment,\n  refundPayment,\n  returnDelivery,\n  cancelPayment,\n  updateSignature,\n  requiredForGuest,\n  requiredForApproval,\n  approve,\n  cancel,\n  accountOrder,\n  OrderError,\n  orderPicked\n} from '../domain/order'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  updateProperties,\n  validateProperties,\n  validateModel,\n  allowProperties\n} from '../domain/mixins'\nimport { nanoid } from 'nanoid'\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Order = {\n  endpoint: 'orders',\n  factory: makeOrderFactory,\n  domain: 'order',\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://127.0.0.1:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  dependencies: { uuid: () => nanoid(8) },\n  mixins: [\n    requireProperties(\n      'orderItems',\n      requiredForGuest([\n        'lastName',\n        'firstName',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'email'\n      ]),\n      requiredForApproval('paymentStatus'),\n      requiredForCompletion('proofOfDelivery')\n    ),\n    freezeProperties(\n      'orderNo',\n      'customerId',\n      freezeOnApproval([\n        'email',\n        'lastName',\n        'firstName',\n        'orderItems',\n        'orderTotal',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'paymentStatus'\n      ]),\n      freezeOnCompletion('*')\n    ),\n    updateProperties([\n      {\n        propKey: 'orderItems',\n        update: recalcTotal\n      },\n      {\n        propKey: 'orderItems',\n        update: updateSignature\n      }\n    ]),\n    validateProperties([\n      {\n        propKey: 'orderStatus',\n        values: Object.values(OrderStatus),\n        isValid: statusChangeValid\n      },\n      {\n        propKey: 'orderTotal',\n        maxnum: 99999.99,\n        isValid: orderTotalValid\n      },\n      {\n        propKey: 'email',\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      },\n      {\n        propKey: 'phone',\n        regex: 'phone'\n      }\n    ])\n    // allowProperties([fibonacci, time, result])\n  ],\n  validate: validateModel,\n  onDelete: readyToDelete,\n  eventHandlers: [handleOrderEvent],\n  ports: {\n    listen: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    notify: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    validateAddress: {\n      service: 'Address',\n      type: 'outbound',\n      keys: 'shippingAddress',\n      producesEvent: 'addressValidated',\n      disabled: true\n    },\n    authorizePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      keys: 'paymentStatus',\n      consumesEvent: 'startWorkflow',\n      producesEvent: 'paymentAuthorized',\n      undo: cancelPayment,\n      disabled: true\n    },\n    pickOrder: {\n      service: 'Inventory',\n      type: 'outbound',\n      keys: 'pickupAddress',\n      callback: orderPicked,\n      consumesEvent: 'itemsAvailable',\n      producesEvent: 'orderPicked',\n      undo: returnInventory,\n      circuitBreaker: {\n        portTimeout_pickOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 5000\n        }\n      }\n    },\n    shipOrder: {\n      service: 'Shipping',\n      type: 'outbound',\n      callback: orderShipped,\n      consumesEvent: 'orderPicked',\n      producesEvent: 'orderShipped',\n      undo: returnShipment,\n      circuitBreaker: {\n        portTimeout_shipOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        },\n        portRetryFailed_order: {\n          callVolume: 3,\n          errorRate: 2,\n          intervalMs: 60000,\n          fallbackFn: cancel\n        },\n        default: {\n          callVolume: 3,\n          errorRate: 3,\n          intervalMs: 60000\n        }\n      }\n    },\n    trackShipment: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: ['trackingStatus', 'trackingId'],\n      consumesEvent: 'orderShipped',\n      producesEvent: 'orderDelivered',\n      circuitBreaker: {\n        portRetryFailed_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    verifyDelivery: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: 'proofOfDelivery',\n      consumesEvent: 'orderDelivered',\n      producesEvent: 'deliveryVerified',\n      undo: returnDelivery\n    },\n    completePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      callback: paymentCompleted,\n      consumesEvent: 'deliveryVerified',\n      producesEvent: 'orderComplete',\n      undo: refundPayment\n    },\n    cancelShipment: {\n      service: 'Shipping',\n      type: 'outbound'\n    },\n    refundPayment: {\n      service: 'Payment',\n      type: 'outbound'\n    },\n    cancelOrders: {\n      service: 'Order',\n      type: 'inbound',\n      timeout: 0,\n      methods: ['post']\n    },\n    approveOrders: {\n      service: 'Order',\n      type: 'inbound',\n      timeout: 0,\n      methods: ['patch']\n    },\n    trackAsyncContext: {\n      service: 'Telemetry',\n      type: 'inbound',\n      timeout: 0\n    },\n    customHttpStatus: {\n      service: 'Telemetry',\n      type: 'inbound',\n      timeout: 0\n    },\n    testContainsMany: {\n      service: 'Inventory',\n      type: 'inbound',\n      timeout: 0\n    },\n    runFibonacciJs: {\n      service: 'Test',\n      type: 'inbound',\n      timeout: 0\n    },\n    getFieldList: {\n      service: 'Test',\n      type: 'inbound',\n      timeout: 0\n    },\n    createModelEvent: {\n      service: 'Test',\n      type: 'inbound',\n      timeout: 0\n    }\n  },\n  relations: {\n    customer: {\n      modelName: 'customer',\n      type: 'manyToOne',\n      foreignKey: 'customerId',\n      desc: 'Many orders per customer, just one customer per order'\n    },\n    inventory: {\n      modelName: 'inventory',\n      type: 'containsMany',\n      foreignKey: 'itemId',\n      arrayKey: 'orderItems',\n      desc: 'An order contains a list of inventory items to ship.'\n    }\n  },\n  routes: [\n    {\n      path: '/orders',\n      get: async (req, res, ports) =>\n        ports.listModels({\n          writable: res,\n          query: req.query\n        }),\n\n      post: async (req, res, ports) => {\n        try {\n          const result = await ports.createModel(req.body)\n          res\n            .status(200)\n            .json({ message: 'ok', ctx: result.context, id: result.id })\n        } catch (error) {\n          throw new OrderError(error, 404)\n        }\n      }\n    },\n    {\n      path: '/orders/:id',\n      get: async (req, res, ports) => ports.findModel(req.params.id),\n      patch: async (req, res, ports) => {\n        try {\n          const result = await ports.editModel({\n            id: req.params.id,\n            changes: req.body\n          })\n          res.status(200).json({ message: 'ok', ctx: result.context })\n        } catch (error) {\n          throw new OrderError(error, 404)\n        }\n      },\n      delete: async (req, res, ports) => {\n        ports.removeModel(req.params.id)\n        res.status(200).json({ message: 'ok' })\n      }\n    }\n  ],\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    },\n    approve: {\n      command: approve,\n      acl: ['write', 'approve']\n    },\n    cancel: {\n      command: cancel,\n      acl: ['write', 'cancel']\n    },\n    runFibonacci: {\n      command: model => {\n        const start = Date.now()\n        function fibonacci (x) {\n          if (x === 0) {\n            return 0\n          }\n          if (x === 1) {\n            return 1\n          }\n          return fibonacci(x - 1) + fibonacci(x - 2)\n        }\n        const param = parseFloat(model.fibonacci)\n        return {\n          result: fibonacci(Number.isNaN(param) ? 10 : param),\n          time: Date.now() - start\n        }\n      },\n      acl: ['read', 'write']\n    }\n  },\n  serializers: [\n    {\n      on: 'deserialize',\n      key: 'creditCardNumber',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'shippingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    }\n    // {\n    //   on: 'deserialize',\n    //   key: 'billingAddress',\n    //   type: 'string',\n    //   value: (key, value) => decrypt(value),\n    //   enabled: false\n    // }\n  ]\n}\n","'use strict'\n\nimport { makeClient } from '../domain/webswitch'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const WebSwitch = {\n  modelName: 'webswitch',\n  endpoint: 'service-mesh',\n  factory: makeClient,\n  internal: true,\n  ports: {\n    serviceLocatorInit: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAsk: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAnswer: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketConnect: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketPing: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketSend: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketStatus: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketTerminate: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnOpen: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnMessage: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnError: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnPong: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    }\n  }\n}\n","'use strict'\n\nexport default function makeAdapters (ports, adapters, services) {\n  if (!ports || !adapters) {\n    return\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service])\n        }\n      } catch (e) {\n        console.warn(e.message)\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }))\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\n/**\n * @callback addModel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../services'\nimport * as adapters from '../adapters'\nimport * as ports from '../domain/ports'\n// Models\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.entries(modelSpecs).map(([k, v]) =>\n  makeModel({ ...v, modelName: k })\n)\n","'use strict'\n\nexport const assetTypes = ['rotating-asset', 'spare-part']\nexport const properties = ['height', 'length', 'width', 'weight', 'color']\nexport const categories = ['home', 'auto', 'business']\n\nexport const makeInventoryFactory = dependencies => ({\n  category,\n  properties,\n  price,\n  discount,\n  name,\n  desc,\n  sku,\n  purchaseOrder,\n  vendor,\n  inStock,\n  assetType,\n  quantity\n}) =>\n  Object.freeze({\n    category,\n    properties,\n    price: price - (discount || 0.0),\n    name,\n    desc,\n    sku,\n    purchaseOrder,\n    vendor,\n    inStock,\n    assetType,\n    quantity\n  })\n","/**\n * webswitch (c)\n *\n * Websocket clients connect to a common ws server,\n * called a webswitch. When a client sends a message,\n * webswitch broadcasts the message to all other\n * connected clients, including a special webswitch\n * server that acts as an uplink to another network,\n * if one is defined. A Webswitch server can also\n * receive messgages from an uplink and will broadcast\n * those messages to its clients as well.\n */\n\n'use strict'\n\nimport os from 'os'\nimport EventEmitter from 'events'\nimport { nanoid } from 'nanoid'\n\nconst HOSTNAME = 'webswitch.local'\nconst SERVICENAME = 'webswitch'\nconst HBEATTIMEOUT = 'heartBeatTimeout'\nconst WSOCKETERROR = 'webSocketError'\n\nconst isPrimary = /true/i.test(process.env.SWITCH)\nconst isBackup = /true/i.test(process.env.BACKUP)\nconst debug = /true/i.test(process.env.DEBUG)\nconst heartbeatMs = 10000\nconst sslEnabled = /true/i.test(process.env.SSL_ENABLED)\nconst clearPort = process.env.PORT || 80\nconst cipherPort = process.env.SSL_PORT || 443\nconst activePort = sslEnabled ? cipherPort : clearPort\nconst activeProto = sslEnabled ? 'wss' : 'ws'\nconst activeHost = process.env.DOMAIN || os.hostname()\nconst proto = isPrimary ? activeProto : process.env.SWITCH_PROTO\nconst port = isPrimary ? activePort : process.env.SWITCH_PORT\nconst host = isPrimary ? activeHost : process.env.SWITCH_HOST\nconst override = /true/i.test(process.env.SWITCH_OVERRIDE)\nconst apiProto = sslEnabled ? 'https' : 'http'\nconst apiUrl = `${apiProto}://${activeHost}:${activePort}`\n\nfunction serviceUrl () {\n  const url = `${proto}://${host}:${port}`\n  if (proto && host && port) return url\n  if (isPrimary) throw new Error(`invalid url ${url}`)\n  return null\n}\n\n/**\n * Service mesh client impl. Uses websocket and service-locator\n * adapters through ports injected into the {@link mesh} model.\n * Cf. modelSpec by the same name, i.e. `webswitch`.\n */\nexport class ServiceMeshClient extends EventEmitter {\n  /**\n   * The model is passed as the only arg.\n   *\n   * @param {import('../../domain').Model} mesh the domain model\n   */\n  constructor (mesh) {\n    super('webswitch')\n    this.url\n    this.mesh = mesh\n    this.name = SERVICENAME\n    this.isPrimary = isPrimary\n    this.isBackup = isBackup\n    this.pong = true\n    this.heartbeatTimer = 3000\n    this.headers = {\n      'x-webswitch-host': os.hostname(),\n      'x-webswitch-role': 'node',\n      'x-webswitch-pid': process.pid\n    }\n  }\n\n  /**\n   *\n   * @param {number} asyncId id's instance to kill\n   * @returns {{telemetry:{mem:number,cpu:number}}}\n   */\n  telemetry () {\n    return {\n      eventName: 'telemetry',\n      proto: this.name,\n      apiUrl,\n      heartbeatMs,\n      hostname: os.hostname(),\n      role: 'node',\n      pid: process.pid,\n      telemetry: {\n        ...process.memoryUsage(),\n        ...process.cpuUsage(),\n        ...performance.nodeTiming\n      },\n      services: this.mesh.listServices(),\n      events: this.mesh.listEvents(),\n      socketState: this.mesh.websocketStatus() || 'undefined'\n    }\n  }\n\n  /**\n   * Zero-config, self-forming mesh network:\n   * Discover URL of broker to connect to, or\n   * if this is the broker, cast the local url\n   * @returns {Promise<string>} url\n   */\n  async resolveUrl () {\n    await this.mesh.serviceLocatorInit({\n      serviceUrl: serviceUrl(),\n      name: this.name,\n      primary: this.isPrimary,\n      backup: this.isBackup\n    })\n    if (this.isPrimary) {\n      await this.mesh.serviceLocatorAnswer()\n      return serviceUrl()\n    }\n    return override ? serviceUrl() : this.mesh.serviceLocatorAsk()\n  }\n\n  /**\n   * Use multicast dns to resolve broker url. Connect to\n   * service mesh broker. Allow listeners to subscribe to\n   * indivdual or all events. Send binary messages with\n   * protocol and idempotentency headers. Periodically send\n   * telemetry data.\n   *\n   * @param {*} options\n   * @returns\n   */\n  async connect (options = { binary: true }) {\n    this.options = options\n    this.url = await this.resolveUrl()\n\n    this.mesh.websocketConnect(this.url, {\n      agent: false,\n      headers: this.headers,\n      protocol: SERVICENAME,\n      useBinary: options.binary\n    })\n\n    this.mesh.websocketOnOpen(() => {\n      console.log('connection open')\n      this.send(this.telemetry())\n      this.heartbeat()\n      setTimeout(() => this.sendQueuedMsgs(), 3000)\n    })\n\n    this.mesh.websocketOnMessage(message => {\n      if (!message.eventName) {\n        debug && console.debug({ missingEventName: message })\n        this.emit('missingEventName', message)\n        return\n      }\n      try {\n        this.emit(message.eventName, message)\n        this.listeners('*').forEach(listener => listener(message))\n      } catch (error) {\n        console.error({ fn: this.connect.name, error })\n      }\n    })\n\n    this.mesh.websocketOnError(error => {\n      this.emit(WSOCKETERROR, error)\n      console.error({ fn: this.connect.name, error })\n    })\n\n    this.mesh.websocketOnClose((code, reason) => {\n      console.log({\n        msg: 'received close frame',\n        code,\n        reason: reason?.toString()\n      })\n      clearTimeout(this.heartbeatTimer)\n      setTimeout(() => {\n        console.debug('reconnect due to socket close')\n        this.connect()\n      }, 5000)\n    })\n\n    this.mesh.websocketOnPong(() => (this.pong = true))\n    this.once('timeout', this.timeout)\n  }\n\n  timeout () {\n    console.warn('timeout')\n    this.emit(HBEATTIMEOUT, this.telemetry())\n    this.mesh.websocketTerminate()\n    setTimeout(() => {\n      console.debug('reconnect due to timeout')\n      this.connect()\n    }, 5000)\n  }\n\n  heartbeat () {\n    if (this.pong) {\n      this.pong = false\n      this.mesh.websocketPing()\n      this.heartbeatTimer = setTimeout(() => this.heartbeat(), heartbeatMs)\n    } else {\n      clearTimeout(this.heartbeatTimer)\n      this.emit('timeout')\n    }\n  }\n\n  /**\n   * Convert message to binary and send with protocol and idempotency headers.\n   * If message cannot be sent because of connection state or buffering queue\n   * message in domain object for retry later. Using a domain object ensures\n   * persistence of the queue across boots.\n   *\n   * @param {object} msg\n   * @returns {Promise<boolean>} true if sent, false if not\n   */\n  send (msg) {\n    const sent = this.mesh.websocketSend(msg, {\n      headers: {\n        ...this.headers,\n        'idempotency-key': nanoid()\n      }\n    })\n    if (sent) return true\n    this.mesh.enqueue(msg)\n    return false\n  }\n\n  /**\n   * Send any messages buffered in `sendQueue`.\n   */\n  sendQueuedMsgs () {\n    let sent = true\n    while (this.mesh.queueDepth() > 0 && sent)\n      sent = this.send(this.mesh.dequeue())\n  }\n\n  /**\n   * Sends message to mesh broker service.\n   * @param {*} msg\n   */\n  publish (msg) {\n    return this.send(msg)\n  }\n\n  /**\n   * Register handler to fire on event\n   * @param {string} eventName\n   * @param {function()} callback\n   */\n  subscribe (eventName, callback) {\n    this.on(eventName, callback)\n  }\n\n  /**\n   * A new object will be created on system reload.\n   * Dispose of the old one. Run in context to\n   * distinguish between the new and old instance.\n   *\n   * @param {*} code\n   * @param {*} reason\n   */\n  async close (code, reason) {\n    console.debug('closing socket')\n    await this.mesh.save() // save queued messages\n    this.removeAllListeners()\n    this.mesh.websocketClose(code, reason)\n  }\n}\n\n/**\n * @typedef {{\n *   senderQueue:string[],\n *   queueDepth:function():number,\n *   connect:function(),\n *   close:function(),\n *   publish(object),\n *   enqueue:function(string),\n *   dequeue:function(),\n *   subscribe:function(string,function())\n * }} serviceMeshIface\n */\n\n/**\n * Domain model factory function. This model is\n * used internally by the Aegis framework as a\n * pluggable service mesh client. Implement the\n * the methods below to create a new plugin.\n *\n * @param {*} dependencies injected depedencies\n * @returns {function({function():string[],function():string[]}):serviceMeshIface}\n */\nexport function makeClient (dependencies) {\n  let client\n  return function ({ listServices, listEvents }) {\n    return {\n      /**@type {function():string[]} */\n      listServices,\n      /**@type {function():string[]} */\n      listEvents,\n      /**@type {string[]} */\n      sendQueue: [],\n      /**@type {number} */\n      sendQueueMax: 1000,\n\n      queueDepth () {\n        return this.sendQueue.length\n      },\n\n      enqueue (msg) {\n        this.sendQueue.push(msg)\n      },\n\n      dequeue () {\n        return this.sendQueue.shift()\n      },\n\n      /**\n       *\n       * @returns {ServiceMeshClient}\n       */\n      getClient () {\n        if (client) return client\n        client = new ServiceMeshClient(this)\n        return client\n      },\n\n      async connect (options) {\n        this.getClient().connect(options)\n      },\n\n      async publish (event) {\n        this.getClient().publish(event)\n      },\n\n      subscribe (eventName, handler) {\n        this.getClient().subscribe(eventName, handler)\n      },\n\n      async close (code, reason) {\n        this.getClient().close(code, reason)\n      }\n    }\n  }\n}\n"],"sourceRoot":""}